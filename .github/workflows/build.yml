on:
  push:
    branches:
      - erdipage
jobs:
  #  build:
  #    runs-on: ubuntu-latest
  #    name: Build and Deploy Job docker image to azure
  #
  #    steps:
  #      - name: Checkout Repo
  #        uses: actions/checkout@v3
  #
  #      - name: Login to docker
  #        uses: docker/login-action@v3
  #        with:
  #          registry: ghcr.io
  #          username: ${{ secrets.USERNAME }}
  #          password: ${{ secrets.PAT }}
  #
  #      - name: Build and push image
  #        uses: docker/build-push-action@v3
  #        with:
  #          push: true
  #          tags: ghcr.io/${{ github.repository }}/erdipage:latest, ghcr.io/${{ github.repository }}/erdipage:${{ github.sha }}

  build-static-artifact:
    runs-on: ubuntu-latest
    name: Build and Deploy Job docker image to azure

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        shell: bash
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build application with static artifact
        shell: bash
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Publish to GitHub Pages ðŸš€
        id: deployment
        uses: actions/deploy-pages@v4

  merge-updates:
    name: Merge dependabot PRs if conditions are met
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Disable auto-merge for Major Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' }}
        run: echo "won't automerge because it is a major version"

      - name: Enable auto-merge for Minor Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}